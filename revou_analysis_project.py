# -*- coding: utf-8 -*-
"""Revou Analysis Project

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-vNrzeJXDuxHctGJOPRVzNgeO2sXlSvg

**Analyzing Amazon Prime**
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""### **Gathering the Data**"""

df = pd.read_csv('amazon_prime_titles.csv')
df.head()

"""### **Assesing the data**"""

df.info()

"""Checking for missing Values"""

print("Number of duplicate entries:", df.duplicated().sum())

"""### **Cleaning Dataset**

Handle Missing Values
"""

df['director'].fillna('Unknown', inplace=True)
df['cast'].fillna('Unknown', inplace=True)
df['country'].fillna('Unknown', inplace=True)
df['date_added'].fillna('Unknown', inplace=True)
df['rating'].fillna('Unknown', inplace=True)

"""### **Exploratory Data Analysis (EDA)**

Grouping by rating and type
"""

print(df.groupby(by="rating").agg({'show_id': 'count'}))
print(df.groupby(by="type").agg({'show_id': 'count'}))

"""Enhanced Analysis: Grouping by both Type and Rating"""

type_rating_group = df.groupby(['type', 'rating']).size().unstack().fillna(0)
print(type_rating_group)

"""Visualization of Type distribution"""

plt.figure(figsize=(7, 7))
colors = ['#ff9999', '#66b3ff']

plt.pie(
    df.groupby(by="type").agg({'show_id': 'count'})['show_id'],
    labels=df.groupby(by="type").agg({'show_id': 'count'}).index,
    autopct='%1.1f%%',
    startangle=90,
    colors=colors,
    explode=[0.1, 0],  # Slightly explode the first slice
    shadow=True,
)

plt.title('Distribution of Show Types', fontsize=16, fontweight='bold')
plt.axis('equal')
plt.show()

"""Additional Visualization: Distribution of Ratings"""

plt.figure(figsize=(10, 6))
sns.countplot(x='rating', data=df, palette='viridis', order=df['rating'].value_counts().index)
plt.title('Distribution of Ratings on Amazon Prime', fontsize=16)
plt.xticks(rotation=45)
plt.show()

"""Additional Visualization: Count of Shows by Year of Release"""

df['release_year'] = pd.to_numeric(df['release_year'], errors='coerce')

plt.figure(figsize=(10, 6))
sns.histplot(df['release_year'], bins=30, kde=False, color='skyblue')
plt.title('Distribution of Release Years', fontsize=16)
plt.xlabel('Release Year')
plt.ylabel('Count of Shows')
plt.show()

"""Enhanced Analysis: Top 10 Directors by Number of Shows"""

top_directors = df['director'].value_counts().head(10)
plt.figure(figsize=(10, 6))
sns.barplot(x=top_directors.values, y=top_directors.index, palette='magma')
plt.title('Top 10 Directors with Most Shows', fontsize=16)
plt.xlabel('Number of Shows')
plt.show()